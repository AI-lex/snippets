xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = www_likes, binwidth = 10, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = log10(www_likes+1), binwidth = 0.05, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = subset(fb_data, !is.na(gender)), x = www_likes,color = gender, geom = "freqpoly")+
scale_x_continuous(trans="log10")+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = www_likes, binwidth = 10, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = log10(www_likes+1), binwidth = 0.05, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = subset(fb_data, !is.na(gender)), binwidth = 20, x = www_likes,color = gender, geom = "freqpoly")+
scale_x_continuous(trans="log10")+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = www_likes, binwidth = 10, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = log10(www_likes+1), binwidth = 0.05, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = subset(fb_data, !is.na(gender)), binwidth = 10, x = www_likes,color = gender, geom = "freqpoly")+
scale_x_continuous(trans="log10")+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = www_likes, binwidth = 10, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = log10(www_likes+1), binwidth = 0.05, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = subset(fb_data, !is.na(gender)), binwidth = 30, x = www_likes, color = gender, geom = "freqpoly")+
scale_x_continuous(trans="log10")+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = www_likes, binwidth = 10, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = na.omit(fb_data), x = log10(www_likes+1), binwidth = 0.05, color = gender, geom = "freqpoly")+
#scale_x_continuous(limits = c(min(fb_data$friend_count),max(fb_data$friend_count)))+
xlab('www_likes of user') +
ylab('Number of users in sample')
qplot(data = subset(fb_data, !is.na(gender)), x = www_likes, color = gender, geom = "freqpoly")+
scale_x_continuous(trans="log10")+
xlab('www_likes of user') +
ylab('Number of users in sample')
by(fb_data$www_likes, fb_data$gender, sum)
by(fb_data$www_likes, fb_data$gender, sum)
by(fb_data$www_likes, fb_data$gender, mean)
by(fb_data$www_likes, fb_data$gender, summary)
by(fb_data$www_likes, fb_data$gender, summary)
by(fb_data$www_likes, fb_data$gender, count)
by(fb_data$www_likes, fb_data$gender, sum)
by(fb_data$www_likes, fb_data$gender, summary)
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
scale_y_continuous(limits = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
scale_y_continuous(limits = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
coord_cartesian(limits = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
scale_y_continuous(limits = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
scale_y_continuous(limits = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friend_count, geom="boxplot")+
coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")+
#coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
#coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
#coord_cartesian(ylim = c(0,1000))
by(fb_data$friendships_initiated, fb_data$gender, summary)
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
#coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
coord_cartesian(ylim = c(0,500))
by(fb_data$friendships_initiated, fb_data$gender, summary)
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
#coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
coord_cartesian(ylim = c(0,500))
by(fb_data$friendships_initiated, fb_data$gender, summary)
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
#coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot") +
coord_cartesian(ylim = c(0,500))
by(fb_data$friendships_initiated, fb_data$gender, summary)
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot")
#coord_cartesian(ylim = c(0,1000))
qplot(data=subset(fb_data, !is.na(gender)), x= gender, y=friendships_initiated, geom="boxplot") +
coord_cartesian(ylim = c(0,300))
by(fb_data$friendships_initiated, fb_data$gender, summary)
by(fb_data$friendships_initiated, fb_data$gender, mean)
cond = fb_data$mobile_likes > 1
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
cond = fb_data$mobile_likes > 1
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
## factorize to define variable as categorical
fb_data$mobile_check_in <- actor(fb_data$mobile_check_in)
cond = fb_data$mobile_likes > 1
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
## factorize to define variable as categorical
fb_data$mobile_check_in <- factor(fb_data$mobile_check_in)
cond = fb_data$mobile_likes > 1
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
## factorize to define variable as categorical
fb_data$mobile_check_in <- factor(fb_data$mobile_check_in)
summary(fb_data$mobile_check_in)
cond = fb_data$mobile_likes > 1
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
## factorize to define variable as categorical
fb_data$mobile_check_in <- factor(fb_data$mobile_check_in)
summary(fb_data$mobile_check_in)
length(fb_data$mobile_check_in)
cond = fb_data$mobile_likes > 1
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
## factorize to define variable as categorical
fb_data$mobile_check_in <- factor(fb_data$mobile_check_in)
summary(fb_data$mobile_check_in) / length(fb_data$mobile_check_in)
cond = fb_data$mobile_likes > 0
fb_data$mobile_check_in <- ifelse(cond, 1, 0)
## factorize to define variable as categorical
fb_data$mobile_check_in <- factor(fb_data$mobile_check_in)
summary(fb_data$mobile_check_in) / length(fb_data$mobile_check_in)
library(ggplot2) #must load the ggplot package first
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
summary(diamonds)
str(diamonds)
summary(diamonds$color)
?diamonds
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) #must load the ggplot package first
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
summary(diamonds)
str(diamonds)
summary(diamonds$color)
?diamonds
plot(diamonds$price)
qplot(data = diamonds, x=price) +
scale_x_continuous()
qplot(data = diamonds, x=price)
qplot(data = diamonds, x=price, bins=50)
summary(diamonds$price)
summary(omit.na(diamonds$price))
summary(na.omit(diamonds$price))
summary(diamonds$price)
diamonds$price < 250
diamonds(diamonds$price < 250)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
count(price_under_250)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
length(price_under_250)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250)
dim(price_under_500)
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250, 1)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250)[0]
dim(price_under_500)
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250)[0]
dim(price_under_500)[0]
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250)
dim(price_under_500)
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_over_15000 = subset(diamonds, price>15000)
dim(price_under_250)
dim(price_under_500)
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_equalover_15000 = subset(diamonds, price>=15000)
dim(price_under_250)
dim(price_under_500)
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_equalover_15000 = subset(diamonds, price>=15000)
dim(price_under_250)
dim(price_under_500)
dim(price_over_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_equalover_15000 = subset(diamonds, price>=15000)
dim(price_under_250)
dim(price_under_500)
dim(price_equalover_15000)
price_under_250 = subset(diamonds, price<250)
price_under_500 = subset(diamonds, price<500)
price_equalover_15000 = subset(diamonds, price>=15000)
dim(price_under_250)
dim(price_under_500)
dim(price_equalover_15000)
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),100), breaks= seq(10, 100, 5))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),max(diamonds$price)), breaks= seq(10, 100, 5))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),max(diamonds$price)), breaks= seq(0, max(diamonds$price), 200))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),max(diamonds$price)), breaks= seq(0, max(diamonds$price), 500))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),max(diamonds$price)), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous()
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), binwidth = 100, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), bin=30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), binwidth = 1, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = log2(price), binwidth = 1, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = log2(price), binwidth = 0.1, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), binwidth = 1, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('price of diamonds') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = price, binwidth = 30, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous(limits = c(min(diamonds$price),2000), breaks= seq(0, max(diamonds$price), 1000))+
xlab('Age of user') +
ylab('Number of diamonds in sample')
qplot(data = diamonds, x = sqrt(price), binwidth = 1, color = I('black'), fill = I('#099DD9'))+
scale_x_continuous() +
xlab('sqrt price of diamonds') +
ylab('Number of diamonds in sample')
quantile(diamonds$price)
quantile(diamonds$price)[0]
quantile(diamonds$price)(0)
quantile(diamonds$price)(1)
quantile(diamonds$price)[0,1]
quantile(diamonds$price)[1]
p1 = qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')
p2 = qplot(data = subset(data = diamonds, price <= quantile(diamonds$price)[2]), x=price) +
xlab('price') +
ylab('occurrance - under 25% quantile')
p1 = qplot(data = diamonds, x=prices) +
xlab('price') +
ylab('occurrance')
View(diamonds)
p1 = qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')
p2 = qplot(data = subset(data = diamonds, price <= quantile(diamonds$price)[2]), x=price) +
xlab('price') +
ylab('occurrance - under 25% quantile')
quantile(diamonds$price)[2]
subset(data = diamonds, price <= quantile(diamonds$price)[2])
subset(data = diamonds, diamonds$price <= quantile(diamonds$price)[2])
subset(data = diamonds, price <= 3000)
View(diamonds)
p1 = qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')+
facet_wrap(~cut)
p1 = qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')+
facet_wrap(~cut
p1 = qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')+
facet_wrap(~cut)
qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')+
facet_wrap(~cut)
by(data = diamonds, cut, price)
by(data = diamonds, cut, summary)
by(diamonds$price, diamonds$cut, summary)
qplot(data = diamonds, x=price) +
xlab('price') +
ylab('occurrance')+
facet_wrap(~cut, scales="free")
qplot(data = diamonds, x=log10(price)) +
xlab('log10') +
ylab('occurrance')+
facet_wrap(~cut, scales="free")
qplot(data = diamonds, x=log10(price), binwidth=0.1) +
xlab('log10') +
ylab('occurrance')+
facet_wrap(~cut, scales="free")
qplot(data = diamonds, x=log10(price), binwidth=0.01) +
xlab('log10') +
ylab('occurrance')+
facet_wrap(~cut, scales="free")
qplot(data = diamonds, x=log10(price), binwidth=0.05) +
xlab('log10') +
ylab('occurrance')+
facet_wrap(~cut, scales="free")
qplot(data = diamonds, x=price, binwidth=0.05) +
scale_x_log10() +
xlab('log10 price') +
ylab('occurrance')+
facet_wrap(~cut, scales="free")
qplot(data = diamonds, x=price, goem="boxplot")
qplot(data = diamonds, x=price, geom="boxplot")
qplot(data = diamonds, y=price, geom="boxplot")
qplot(data = diamonds, y=price, geom="boxplot")
qplot(data = diamonds, y=price, geom="boxplot")+
facet_wrap(~cut)
qplot(data = diamonds, y=price, geom="boxplot")
qplot(data = diamonds, y=price, x=cut, geom="boxplot")
summary(diamonds$cut)
qplot(data = diamonds, y=price, x=cut)
qplot(data = diamonds, x=cut)
qplot(data = diamonds, x=cut)
qplot(data = diamonds, x=clarity)
qplot(data = diamonds, x=color)
qplot(data = diamonds, y=price, geom="boxplot")
qplot(data = diamonds, y=price, x=cut, geom="boxplot")
qplot(data = diamonds, y=price, x=clarity, geom="boxplot")
qplot(data = diamonds, y=price, x=color, geom="boxplot")
quantile(subset(diamonds, color="D")$price)
quantile(subset(diamonds, color="D")$price)
quantile(subset(diamonds, color="J")$price)
quantile(subset(diamonds, color="D")$price)
quantile(subset(diamonds, color="d")$price)
quantile(subset(diamonds, color="D")$price)
quantile(subset(diamonds, color="a")$price)
quantile(subset(diamonds, color=="D")$price)
quantile(subset(diamonds, color=="J")$price)
quantile(subset(diamonds, color=="D")$price)
quantile(subset(diamonds, color=="J")$price)
IQR(subset(diamonds, color=="D")$price)
IQR(subset(diamonds, color=="J")$price)
diamonds$price_per_carat <- diamonds$price / diamonds$carat
diamonds$price_per_carat <- diamonds$price / diamonds$carat
qplot(data = diamonds, y=price_per_carat, x=color, geom="boxplot")
qplot(data = diamonds, y=carat, x=color, geom="freqpoly")
qplot(data = diamonds, y=carat, geom="freqpoly")
qplot(data = diamonds, x=carat, geom="freqpoly")
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.1)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.1)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.3)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.8)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=1.01)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=1.6)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=2.0)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=3.0)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=5.0)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.1)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.2)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.01)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=1)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.5)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.1)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.09)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.09)
table(diamonds$carat)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.09)
table(diamonds$carat ==1.6)
table(diamonds$carat ==0.1)
table(diamonds$carat ==0.3)
table(diamonds$carat ==0.8)
table(diamonds$carat ==1.01)
table(diamonds$carat ==1.6)
table(diamonds$carat ==2.0)
table(diamonds$carat ==3.0)
table(diamonds$carat ==5.0)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.05)
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.05)+
scale_x_continuous(seq=c(0,5,0.3))
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.05)+
scale_x_continuous(breaks=seq(0,5,0.3))
qplot(data = diamonds, x=carat, geom="freqpoly", binwidth=0.05)+
scale_x_continuous(breaks=seq(0,5,0.2))
install.packages("tidyr")
library(tidyr)
?gather
?spread
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyr")
library(tidyr)
#install.packages("tidyr")
#library(tidyr)
#?gather
#?spread
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
#install.packages("tidyr")
#library(tidyr)
#?gather
#?spread
#install.packages("dplyr")
library(dplyr)
